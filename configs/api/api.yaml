log:
  name: "daily-your-go-user-api" # logger 名称。
  development: true # 是否开启开发模式。，开发模式下会打印调试信息，默认 false。
  level: "debug" # 日志级别，优先级从低到高依次为：debug，info，warn，error，dpanic，panic，fatal。
  format: "console" # 支持的日志输出格式，目前支持 console 和 json 两种。console 其实就是 text 格式。
  enable-color: true # 是否开启颜色输出，true：是，false：否
  disable-caller: false # 是否开启 caller，如果开启会在日志中显示调用日志所在的文件、函数和行号
  disable-stacktrace: false # 是否在 panic 及以上级别禁止打印堆栈信息
  output-paths: logs/daily-your-go-user-api.log,stdout # 支持输出到多个输出，逗号分开。支持输出到标准输出（stdout）和文件
  error-output-paths: logs/daily-your-go-user-api.error.log # zap 内部（非业务）错误日志输出路径，多个输出，逗号分开
registry:
  address: "192.168.5.52:8500"
  scheme: "http"
server:
  name: "daily-your-go-api"  # 服务名，注册到consul的服务名称
  host: "192.168.5.52" # host, 默认使用 0.0.0.0
  port: 8017 # grpc 安全模式下的端口，默认 8081
  http-port: 8051 # http 模式下的端口，默认 8080
  enable-health-check: true # 是否开启健康检查，如果开启会安装 /healthz 路由，默认 true
  enable-profiling: true # 开启 metrics，router: /metrics
  enable-metrics: true # 开启性能分析，可以通过 <host>:<port>/debug/pprof 地址查看程序栈、线程等信息
  middlewares: # 中间件配置
    - cors # 跨域
    - logger # 日志
    - recovery # 恢复
    - context # 上下文
redis:
  host: "192.168.5.52"
  port: 6379
  password: ""
  database: 0
sms:
  key: "LTAI5t73Pvqvb1GDZySv7t7m"
  secret: "LqJNpgF4btnXIKpBSxlXT2wvhBw2ze"
jwt:
  jwt:
  realm: JWT # jwt 标识
  key: nf6C74WZ0OReB0K1QpKhcee9lmBohGSq # 服务端密钥
  timeout: 2400h # token 过期时间(小时)
  max-refresh: 240h # token 更新时间(小时)